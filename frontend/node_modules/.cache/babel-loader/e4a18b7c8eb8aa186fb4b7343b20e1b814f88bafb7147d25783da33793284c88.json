{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\E A S Y\\\\Documents\\\\UP_Skilling\\\\DVOC\\\\projects\\\\Term_3_project\\\\AnimeFlix-GPT\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { checkValidData } from '../utils/validate';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [isSignInForm, setIsSignInForm] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const email = useRef(null);\n  const password = useRef(null);\n  const handleButtonClick = () => {\n    // let first validate the data\n    const message = checkValidData(email.current.value, password.current.value);\n    setErrorMessage(message);\n\n    // after validation checking is done then i can proceed with signIn/signUp\n  };\n  const toggleSignInForm = () => {\n    setIsSignInForm(!isSignInForm);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-screen h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"brightness-90 w-full h-full object-cover\",\n        src: \"./images/Background.png\",\n        alt: \"Background anime wallpaper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"WbBZ25kHjvZvzd89dYw37d06vu8=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","useState","checkValidData","Header","jsxDEV","_jsxDEV","Login","_s","isSignInForm","setIsSignInForm","errorMessage","setErrorMessage","email","password","handleButtonClick","message","current","value","toggleSignInForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/E A S Y/Documents/UP_Skilling/DVOC/projects/Term_3_project/AnimeFlix-GPT/frontend/src/components/Login.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport { checkValidData } from '../utils/validate';\r\nimport Header from './Header';\r\n\r\nconst Login = () => {\r\n  \r\n  const [isSignInForm, setIsSignInForm] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const email = useRef(null);\r\n  const password = useRef(null);\r\n\r\n  const handleButtonClick = () => {\r\n    // let first validate the data\r\n    const message = checkValidData(email.current.value, password.current.value);\r\n    setErrorMessage(message);\r\n\r\n    // after validation checking is done then i can proceed with signIn/signUp\r\n    \r\n\r\n  }\r\n\r\n  const toggleSignInForm = () => {\r\n    setIsSignInForm(!isSignInForm);\r\n  };\r\n    return (\r\n        <div className='relative w-screen h-screen'>\r\n        <Header />\r\n        <div className='absolute inset-0'>\r\n          <img className='brightness-90 w-full h-full object-cover' src='./images/Background.png' alt='Background anime wallpaper' />\r\n        </div>\r\n  \r\n        \r\n  \r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Login"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMW,KAAK,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC1B,MAAMa,QAAQ,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMc,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACA,MAAMC,OAAO,GAAGb,cAAc,CAACU,KAAK,CAACI,OAAO,CAACC,KAAK,EAAEJ,QAAQ,CAACG,OAAO,CAACC,KAAK,CAAC;IAC3EN,eAAe,CAACI,OAAO,CAAC;;IAExB;EAGF,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7BT,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EACC,oBACIH,OAAA;IAAKc,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBAC3Cf,OAAA,CAACF,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVnB,OAAA;MAAKc,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/Bf,OAAA;QAAKc,SAAS,EAAC,0CAA0C;QAACM,GAAG,EAAC,yBAAyB;QAACC,GAAG,EAAC;MAA4B;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIH,CAAC;AAEZ,CAAC;AAAAjB,EAAA,CAhCKD,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AAkCX,eAAeA,KAAK;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}