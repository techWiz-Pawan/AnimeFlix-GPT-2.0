{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { getNowPlayingMovies } from '../redux/movieSlice';\nimport { Now_Playing_Movie, options } from '../utils/constant';\nconst useNowPlayingMovies = async () => {\n  _s();\n  const dispatch = useDispatch();\n  try {\n    const res = await axios.get(Now_Playing_Movie, options);\n    dispatch(getNowPlayingMovies(res.data.results));\n  } catch (error) {\n    // console.log(error);\n  }\n};\n_s(useNowPlayingMovies, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\nexport default useNowPlayingMovies;","map":{"version":3,"names":["axios","useDispatch","getNowPlayingMovies","Now_Playing_Movie","options","useNowPlayingMovies","_s","dispatch","res","get","data","results","error"],"sources":["C:/Users/E A S Y/Documents/UP_Skilling/DVOC/projects/Term_3_project/AnimeFlix-GPT/frontend/src/hooks/useNowPlayingMovies.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getNowPlayingMovies } from '../redux/movieSlice';\r\nimport { Now_Playing_Movie, options } from '../utils/constant';\r\n\r\nconst useNowPlayingMovies = async () => {\r\n    const dispatch = useDispatch();\r\n\r\n    try {\r\n        const res = await axios.get(Now_Playing_Movie, options);\r\n        dispatch(getNowPlayingMovies(res.data.results));\r\n    } catch (error) {\r\n        // console.log(error);\r\n    }\r\n}\r\n\r\nexport default useNowPlayingMovies;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,iBAAiB,EAAEC,OAAO,QAAQ,mBAAmB;AAE9D,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,IAAI;IACA,MAAMO,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACN,iBAAiB,EAAEC,OAAO,CAAC;IACvDG,QAAQ,CAACL,mBAAmB,CAACM,GAAG,CAACE,IAAI,CAACC,OAAO,CAAC,CAAC;EACnD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ;EAAA;AAER,CAAC;AAAAN,EAAA,CATKD,mBAAmB;EAAA,QACJJ,WAAW;AAAA;AAUhC,eAAeI,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}